#!/bin/bash
#
# FILE
#	gcdns-genbot/scripts/gcdns.sh
# NOTES
#	docker-gen schema does not mirror Docker :(!
#

fLog() { echo "`date +%b' '%d' '%T` $0[$$]: $@" >> /tmp/gcdns.sh.log; }

#clean log everytime
cat /dev/null > /tmp/gcdns.sh.log;
fLog "start";

if [ -f /usr/bin/gcloudauth.sh ];then
	fLog "attempting to auth one shot";
	/usr/bin/gcloudauth.sh >> /tmp/gcdns.sh.log 2>&1;
	if [ $? = 0 ];then
		rm -f /usr/bin/gcloudauth.sh >> /tmp/gcdns.sh.log 2>&1;
		if [ $? = 0 ];then
			fLog "Ok auth one shot";
		fi
	else
		fLog "error auth one shot";
	fi
fi


#We will turn this into an ENV VAR soont
if [ "$cGCDNSNSIP" = "" ];then
	cGCDNSNSIP="ns-cloud-d1.googledomains.com.";
	#fLog "cGCDNSNSIP ENV VAR must be set";
fi
	
if [ "$cGCDNSZone" = "" ];then
	fLog "cGCDNSZone ENV VAR must be set";
	exit 1;
fi
# replace all blanks
cGCDNSZoneStops=${cGCDNSZone//-/.};

cExternIP=`/usr/bin/curl -s ipinfo.io/ip 2>/dev/null`;
if [ $? != 0 ];then
	fLog "cExternIP curl error";
	exit 2;
fi
if [ "$cExternIP" = "" ];then
	fLog "cExternIP not set";
	exit 3;
fi


#add or remove A records per host
{{range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" ","}}
	{{range $container := $containers}}
		{{ if $container.State.Running }}
#create transaction
/google-cloud-sdk/bin/gcloud dns record-sets transaction start --zone=$cGCDNSZone >> /tmp/gcdns.sh.log 2>&1;
if [ $? != 0 ];then
	fLog "transaction start error";
	rm -f transaction.yaml;
else
			{{ if eq $host "{io.rancher.stack.name}"}}
	cName="{{index $container.Labels "io.rancher.stack.name"}}.$cGCDNSZoneStops";
			{{else}}{{ if eq $host "backup.{io.rancher.stack.name}"}}
	cName="backup.{{index $container.Labels "io.rancher.stack.name"}}.$cGCDNSZoneStops";
			{{else}}
	cName="{{$host}}";
			{{end}}
			{{end}}

	fLog "add transaction start for $cName $cExternIP";
	/google-cloud-sdk/bin/gcloud dns record-sets transaction add --zone=$cGCDNSZone --name="$cName." \
			--type=A --ttl=300 $cExternIP >> /tmp/gcdns.sh.log 2>&1;
	if [ $? != 0 ];then
		fLog "transaction add error trying again in 60s...";
		sleep 60;
		/google-cloud-sdk/bin/gcloud dns record-sets transaction add --zone=$cGCDNSZone --name="$cName." \
			--type=A --ttl=300 $cExternIP >> /tmp/gcdns.sh.log 2>&1;
		if [ $? != 0 ];then
			fLog "transaction add error";
			rm -f transaction.yaml;
		fi
	else
		cReturn=`/google-cloud-sdk/bin/gcloud dns record-sets transaction execute --zone=$cGCDNSZone 2>&1`;
		if [ $? != 0 ];then
			case "$cReturn" in
				*already*exists)
					fLog "already there not adding";
					rm -f transaction.yaml;
					cAlreadyExists="yes";
					;;
				*)
					fLog "unhandled error case:";
					fLog "$cReturn";
					;;
			esac
			if [ "$cAlreadyExists" != "yes" ];then
				fLog "transaction execute error trying whole thing again in 60s...";
				sleep 60;
				rm -f transaction.yaml;
				/google-cloud-sdk/bin/gcloud dns record-sets transaction start --zone=$cGCDNSZone >> /tmp/gcdns.sh.log 2>&1;
				/google-cloud-sdk/bin/gcloud dns record-sets transaction add --zone=$cGCDNSZone --name="$cName." \
						--type=A --ttl=300 $cExternIP >> /tmp/gcdns.sh.log 2>&1;
				/google-cloud-sdk/bin/gcloud dns record-sets transaction execute --zone=$cGCDNSZone >> /tmp/gcdns.sh.log 2>&1;
				if [ $? != 0 ];then
					fLog "transaction execute error";
					rm -f transaction.yaml;
				fi
			fi
		fi
	fi
fi
		{{else}}
#create remove transaction
/google-cloud-sdk/bin/gcloud dns record-sets transaction start --zone=$cGCDNSZone >> /tmp/gcdns.sh.log 2>&1;
if [ $? != 0 ];then
	fLog "transaction start error";
	rm -f transaction.yaml;
else
			{{ if eq $host "{io.rancher.stack.name}"}}
	cName="{{index $container.Labels "io.rancher.stack.name"}}.$cGCDNSZoneStops";
			{{else}}{{ if eq $host "backup.{io.rancher.stack.name}"}}
	cName="backup.{{index $container.Labels "io.rancher.stack.name"}}.$cGCDNSZoneStops";
			{{else}}
	cName="{{$host}}";
			{{end}}
			{{end}}
	cRemoveIP=`/usr/bin/dig @$cGCDNSNSIP +short $cName A`;	
	if [ $? != 0 ] || [ "$cRemoveIP" == "" ];then
		fLog "No A record for $cName. Trying again in 60s...";
		sleep 60;
		cRemoveIP=`/usr/bin/dig @$cGCDNSNSIP +short $cName A`;	
		if [ $? != 0 ] || [ "$cRemoveIP" == "" ];then
			fLog "No A record for $cName. Aborting!";
			rm -f transaction.yaml;
			cNoRecordAbort="yes";
		fi
	fi

if [ "$cNoRecordAbort" != "yes" ];then

	fLog "remove transaction start for $cName $cRemoveIP";
	/google-cloud-sdk/bin/gcloud dns record-sets transaction remove --zone=$cGCDNSZone --name="$cName." \
			 --type=A --ttl=300 $cRemoveIP >> /tmp/gcdns.sh.log 2>&1;
	if [ $? != 0 ];then
		fLog "transaction remove error trying again in 60s";
		sleep 60;
		/google-cloud-sdk/bin/gcloud dns record-sets transaction remove --zone=$cGCDNSZone --name="$cName." \
			 --type=A --ttl=300 $cRemoveIP >> /tmp/gcdns.sh.log 2>&1;
		if [ $? != 0 ];then
			fLog "transaction remove error final";
			rm -f transaction.yaml;
		fi
	else
		cReturn=`/google-cloud-sdk/bin/gcloud dns record-sets transaction execute --zone=$cGCDNSZone 2>&1`;
		if [ $? != 0 ];then
			case "$cReturn" in
				*already*exists)
					fLog "already there not adding";
					rm -f transaction.yaml;
					cAlreadyExists="yes";
					;;
				*)
					fLog "unhandled error case:";
					fLog "$cReturn";
					;;
			esac
			if [ "$cAlreadyExists" != "yes" ];then
				echo $cReturn;
				fLog "transaction execute error trying whole thing again in 60s...";
				sleep 60;
				rm -f transaction.yaml;
				/google-cloud-sdk/bin/gcloud dns record-sets transaction start --zone=$cGCDNSZone >> /tmp/gcdns.sh.log 2>&1;
				/google-cloud-sdk/bin/gcloud dns record-sets transaction remove --zone=$cGCDNSZone --name="$cName." \
						--type=A --ttl=300 $cRemoveIP >> /tmp/gcdns.sh.log 2>&1;
				/google-cloud-sdk/bin/gcloud dns record-sets transaction execute --zone=$cGCDNSZone >> /tmp/gcdns.sh.log 2>&1;
				if [ $? != 0 ];then
					fLog "transaction execute error";
					rm -f transaction.yaml;
				fi
			fi
		fi
	fi
fi
fi
		{{end}}
	{{end}}
{{end}}

fLog "end";
